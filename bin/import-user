#!/usr/bin/env perl

use strict;
use warnings;
use 5.026;
use lib::findbin '../lib';
use Frooble3;
use YAML qw( Dump );

my $author = shift(@ARGV) // 'PLICEASE';
my $dbh = Frooble3->dbh;

# update release table for author:
{
  my @dist;

  foreach my $status (qw( latest cpan ))
  {
    my $spec = Frooble3->metacpan->release({
      all => [
        { status => $status },
        { author => $author },
      ],
    });

    while(my $item = $spec->next)
    {
      push @dist, [ $item->distribution, $item->version, $item->status ];
    }
  }

  @dist = sort { $a->[0] cmp $b->[0] } @dist;

  $dbh->do(q{
    UPDATE
      release
    SET
      type = 'unknown'
    WHERE
      author = ? AND
      type IN ('cpan','latest')
  }, {}, $author);

  my $lookup_release_sth = $dbh->prepare(q{ SELECT lookup_release(?,?) AS id });

  foreach my $d (@dist)
  {
    my($dist, $version, $status) = @$d;

    $lookup_release_sth->execute($dist, $version);
    my $h = $lookup_release_sth->fetchrow_hashref;
    die "unable to create release for $dist / $version"
      unless $h;

    $dbh->do(q{
      UPDATE
        release
      SET
        author = ?,
        type = ?
      WHERE
        id = ?
    }, {}, $author, $status, $h->{id});
  }

}

# cursor through "unknown" and see if they need to be marked as "backpan"
{
  my $sth = $dbh->prepare(q{
    SELECT
      id, dist, version
    FROM
      release
    WHERE
      type = 'unknown'
  });

  $sth->execute;
  while(my $h = $sth->fetchrow_hashref)
  {
    my $release = Frooble3->metacpan->release({
      all => [
        { distribution => $h->{dist}    },
        { version      => $h->{version} },
      ],
    })->next;

    unless(defined $release)
    {
      say STDERR "@{[ $h->{dist} ]}-@{[ $h->{version} ]} not found on metacpan";
      next;
    }

    $dbh->do(q{
      UPDATE
        release
      SET
        author = ?,
        type = ?
      WHERE
        id = ?
    }, {}, $release->author, $release->status, $h->{id});
  }

  $dbh->commit;
}

# fetch reports from ct, and ingest
{
  my $select = $dbh->prepare(q{
    SELECT
      dist, version
    FROM
      release
    WHERE
      type IN ('cpan','latest') AND
      author = ?
  });
  $select->execute($author);

  while(my $h = $select->fetchrow_hashref)
  {
    my @reports = Frooble3->ct->summary($h->{dist}, $h->{version});
    my %count   = Frooble3->importer->ingest(@reports);
    printf "pass: %5d fail: %5d nana: %5d unkn: %5d %s-%s\n",
       $count{pass}//0, $count{fail}//0, $count{na}//0, $count{unknown}//0, $h->{dist}, $h->{version}
       if %count;
  }
}
